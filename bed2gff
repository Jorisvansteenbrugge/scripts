#!/usr/bin/env python
import fileinput

count = 1
class Gene():
	def __init__(self, line):
		self.bedLine = line

	def toGFF(self):
		global count
		#chrom = self.bedLine[0]
		#start = int(self.bedLine[1]) + 1
		#stop = int(self.bedLine[2]) + 1
		#name = self.bedLine[3]
#
#		strand = self.bedLine[5]
#		blockCount = int(self.bedLine[9])
#		blockSizes  = self.bedLine[10].split(",")
#		blockStarts = self.bedLine[11].split(",")

		##################
		self.chrom = self.bedLine[0]
		self.start = self.bedLine[1]
		self.end = self.bedLine[2]
		self.blocks = self.bedLine[9]
		self.strand = self.bedLine[5]		
		self.name = self.bedLine[3]
		self.blockSize =  self.bedLine[10]
		self.blockSizes = self.bedLine[10].split(",")
		self.blockStarts = self.bedLine[11].split(",")
		
		print("{0}\tpita\tmRNA\t{1}\t{2}\t.\t{3}\t.\tID=mRNA{4};Name={5}.mRNA".format(self.chrom,str(self.start),str(self.end),self.strand,str(count),self.name))

		for i in range(self.blocks):
			self.blStart = int(self.start) + int(self.blockStarts[i])
			self.blEnd = self.blStart + int(self.blockSizes[i])

			print("{}\t.\texon\t{}\t{}\t.\t{}\t.\tID=gene{}.exon{};Parent=mRNA{}".format(self.chrom,str(self.blStart),str(self.blEnd),self.strand,str(count),str(i+1),str(count)))
		count += 1

if __name__ == "__main__":
#	for line in fileinput.input():
	test = ["Chr01", "133269",  "144186", "Chr01:133269-143427_", "600", "-", "133269", "143427","0,0,0,", 3, "917,124,228,", "0,7656,9930,"]
	print(test)
	gene = Gene(test)
#		gene = Gene(line.strip().split("\t"))
	gene.toGFF()
